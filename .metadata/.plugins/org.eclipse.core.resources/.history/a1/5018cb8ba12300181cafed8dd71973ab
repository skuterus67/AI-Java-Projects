package GA;

import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.event.ChartChangeEvent;
import org.jfree.chart.event.ChartChangeListener;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.function.PolynomialFunction2D;
import org.jfree.data.xy.XYDataItem;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.ApplicationFrame;
import org.jfree.ui.RefineryUtilities;

public class Visualizer extends ApplicationFrame {
	
	public Visualizer(final String title) {

	    super(title);
	    FitnessFunction fit = new FitnessFunction();
	    GrayCode decoder = new GrayCode();
	    double[] params = new double[] {(double)decoder.x, (double)decoder.y};
	    PolynomialFunction2D poly = new PolynomialFunction2D(params);
	    final XYSeries seriesA = new XYSeries("Above");
	    for (int i=0; i<fit.aboveX.length; i++){
	    	seriesA.add(fit.aboveX[i], fit.aboveY[i]);
	    }
	    final XYSeries seriesB = new XYSeries("Below");
	    for (int i=0; i<fit.belowX.length; i++){
	    	seriesB.add(fit.belowX[i], fit.belowY[i]);
	    }
	    final XYSeries seriesPoly = new XYSeries("Best Individual");
	    for (int i=-30; i<30; i++){
	    	seriesPoly.add(i, poly.getValue(i));
	    }
	    final XYSeriesCollection data = new XYSeriesCollection(seriesA);
	    data.addSeries(seriesB);
	    data.addSeries(seriesPoly);
	    final JFreeChart chart = ChartFactory.createScatterPlot(
	        title,
	        "X", 
	        "Y", 
	        data,
	        PlotOrientation.VERTICAL,
	        true,
	        true,
	        false
	    );

	    final ChartPanel chartPanel = new ChartPanel(chart);
	    chartPanel.setPreferredSize(new java.awt.Dimension(1000, 800));
	    setContentPane(chartPanel);

	}

	
	public static void main(String[] args){
		final Visualizer demo = new Visualizer("Above and Below");
	    demo.pack();
	    RefineryUtilities.centerFrameOnScreen(demo);
	    demo.setVisible(true);
	}

}
